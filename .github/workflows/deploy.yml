name: Deploy to VPS with Docker Compose

on:
  push:
    branches:
      - deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1' # Adjust based on your project's PHP version
          extensions: 'pdo_mysql, mbstring, gd' # Add necessary extensions
          tools: 'composer:v2'

      # - name: Install dependencies
      #   run: composer install --no-dev

      # - name: Generate application key (if needed)
      #   run: php artisan key:generate

      # - name: Build assets (if using Laravel Mix or other asset bundlers)
      #   run: npm install && npm run prod


      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install assets Dependencies using yarn
        run: yarn install
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Build assets using vite for testing
        run: yarn vite build
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: make test


      - name: Connect to VPS and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_DIGITALOCIAN_PRIVATE_KEY }}
          port: 22 # Adjust if needed
          script: |
            # Update the project directory on the VPS
            cd ${{ secrets.VPS_DIR }}
            # Pull latest code from the repository
            git pull origin deploy
            # Build Docker images
            docker compose build
            # Stop and remove existing containers
            docker compose down
            # Start the application
            docker compose up -d
            # Optionally, run database migrations
            # docker-compose exec -T app php artisan migrate
            # Install Laravel dependencies inside the container
            docker exec -it smt_php composer install
            # migrate and seed the database
            docker exec -it smt_php make fresh
      - name: Deploy successful
        run: echo "Deployment successful!"
