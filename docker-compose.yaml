version: "3.7"
services:
    iginx: 
        container_name :
            "${PROJECT_NAME}_nginx"

        build: 
            context:
                ./docker/nginx
            dockerfile: Dockerfile
            
        depends_on:
            - app
        volumes:
            - ./:/var/www/vhost/smt/
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./docker/nginx/nginx.d:/etc/nginx/conf.d
            - ./docker/nginx/ssl:/etc/nginx/ssl
            
        working_dir: /var/www/vhost
        
        ports:
            - '443:443'
            - '9008:9008'
        networks:
            - smt
        labels:
            - 'traefik.http.routers.${PROJECT_NAME}_nginx.rule=HostRegexp(`${APP_DOMAIN}`,`{subdomain:[a-z]+.${APP_DOMAIN}}`)'
            - 'traefik.http.routers.${PROJECT_NAME}_nginx.priority=1'
            - 'traefik.docker.network=proxy'

    app: 
        container_name: "${PROJECT_NAME}_php"
        build: 
            context: ./docker/php
            dockerfile: Dockerfile


            args:
                user: 'musta'
                uid: 1000
        
        environment:
                PHP_MEMORY_LIMIT: '512M'
                COMPOSER_MEMORY_LIMIT: '-1'

        working_dir: /var/www/vhost/smt/

        volumes:
            - ./:/var/www/vhost/smt/

        ports:
            - '9003:9003'

        networks:
            - smt

    mysql:
        image: mariadb:latest
        container_name: "${PROJECT_NAME}_mysql"
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'YES'
            command: mysql --character-set-server=utf8mb4 --collaction-server
        volumes:
            - 'smt_mysql:/data'
        ports:
            - '${FORWORD_DB_PORT:-4406}:3306'
        networks:
            - smt
    
    traefik:
        image: traefik:v2.10
        container_name: "${PROJECT_NAME}_traefik"
        restart: always
        command:
            - --entrypoints.web.address=:80
            - --providers.docker=true
            - --api.insecure=true
            - --log.level=debug
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'    
        ports:
             - '80:80'
             - '8080:8080'
        networks:
             - smt

    redis:
        image: redis
        container_name : "${PROJECT_NAME}_redis"
        ports:
            - '6379:6379'
        volumes:
            - 'smt_redis:/data' 
        networks:
            - smt

networks:
        smt:
            driver: bridge

volumes:
    smt_mysql:
        driver: local

    smt_redis:
        driver: local

